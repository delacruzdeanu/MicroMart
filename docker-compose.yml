version: '3.8'

services:
  # Infrastructure services
  service-discovery:
    image: consul:latest
    ports:
      - "8500:8500"
    networks:
      - micromart-network
    
  api-gateway:
    image: nginx:latest
    ports:
      - "80:80"
    depends_on:
      - service-discovery
    networks:
      - micromart-network

  # Message broker
  kafka:
    image: confluentinc/cp-kafka:latest
    ports:
      - "9092:9092"
    environment:
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    depends_on:
      - zookeeper
    networks:
      - micromart-network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
    networks:
      - micromart-network

  # Databases (example)
  mongo:
    image: mongo:latest
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    networks:
      - micromart-network

  postgres:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: micromart
      POSTGRES_PASSWORD: password
      POSTGRES_DB: micromart
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - micromart-network

  redis:
    image: redis:latest
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - micromart-network

networks:
  micromart-network:
    driver: bridge

volumes:
  mongo-data:
  postgres-data:
  redis-data:

# Add to existing docker-compose.yml
  
  user-service:
    build: ./services/user-service
    ports:
      - "3001:3000"
    environment:
      - MONGO_URI=mongodb://mongo:27017/userdb
      - JWT_SECRET=your_jwt_secret_here
      - NODE_ENV=development
    depends_on:
      - mongo
      - service-discovery
    networks:
      - micromart-network

  product-service:
    build: ./services/product-service
    ports:
      - "8081:8080"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://mongo:27017/productdb
      - SPRING_CLOUD_CONSUL_HOST=service-discovery
    depends_on:
      - mongo
      - service-discovery
    networks:
      - micromart-network